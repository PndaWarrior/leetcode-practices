This is another example of dynamic programming.

We need to utilize the idea of a presum, which is given the ith number, what's the max presum of the subarray that include the ith  number.

Consider
[-2,1,-3,4,-1,2,1,-5,4]

At index 0, the max presum is -2, the value itself
At index 1, the max presum is 1, which is the value itself
At index 2, the max presum is -2, this because the presum must include itself, or we wont' have a continuous subarray
At index 3, the max presum is 4, which is the value itself again


By doing so, we can keep track of the MAX presum of i-1 values, However, we need another variable to store the max answer, because it's possible that we found a solution previously but we the presum calculation dropped it due to other negative values.
